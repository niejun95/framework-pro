<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.AccountMapper">

    <resultMap id="account" type="org.example.entities.Account">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="money" jdbcType="VARCHAR" property="money" />
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="low_income_flag" jdbcType="VARCHAR" property="lowIncomeFlag"/>
    </resultMap>
    <insert id="insertSingle" parameterType="org.example.entities.Account">
        insert into account (id, name, money)
        values
        (#{id}, #{name}, #{money})

    </insert>

    <insert id="insertMany" parameterType="java.util.List">
        insert into account (id, name, money)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.name}, #{item.money})
        </foreach>
    </insert>

    <update id="updateLocalDate">
        update account
        set create_time = #{date}

    </update>

    <update id="updateDate">
        update account
        set create_time = #{date}
        where id = 300
    </update>

    <delete id="deleteAccount">
        delete from account
        where id = #{id}
    </delete>

    <select id="queryAccountInfoByName" resultType="org.example.entities.Account">
        select id as id,
        name as name,
        money as money,
        create_time as createTime,
        low_income_flag as lowIncomeFlag
        from account where name = #{name}
    </select>

    <select id="queryAccountInfoByNameForResultMap" resultMap="account">
        select *
        from account where name = #{name}
    </select>

    <select id="queryAccountByTime" resultType="org.example.entities.Account">
        <![CDATA[ select * from account where create_time < #{date} ]]>
    </select>

    <update id="testIf" parameterType="org.example.entities.Account">
        update account
        <if test="id != null">
            set name = 'ryan'
        </if>
        <if test="id == null">
            set name = 'ryan1'
        </if>
        where id = 1
    </update>

    <update id="updateName" parameterType="java.lang.String">
        update account
        set name = #{name}
        where id = 2
    </update>


</mapper>
